package org.apache.cayenne.testdo.relationship.auto;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.testdo.relationship.FkOfDifferentType;
import org.apache.cayenne.testdo.relationship.MeaningfulFK;
import org.apache.cayenne.testdo.relationship.ReflexiveAndToOne;

/**
 * Class _RelationshipHelper was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _RelationshipHelper extends CayenneDataObject {

    public static final String NAME_PROPERTY = "name";
    public static final String FKS_OF_DIFFERENT_TYPE_PROPERTY = "fksOfDifferentType";
    public static final String MEANIGFUL_FKS_PROPERTY = "meanigfulFKs";
    public static final String REFLEXIVE_AND_TO_ONE_ARRAY_PROPERTY = "reflexiveAndToOneArray";

    public static final String RELATIONSHIP_HELPER_ID_PK_COLUMN = "RELATIONSHIP_HELPER_ID";

    public void setName(String name) {
        writeProperty(NAME_PROPERTY, name);
    }
    public String getName() {
        return (String)readProperty(NAME_PROPERTY);
    }

    public void addToFksOfDifferentType(FkOfDifferentType obj) {
        addToManyTarget(FKS_OF_DIFFERENT_TYPE_PROPERTY, obj, true);
    }
    public void removeFromFksOfDifferentType(FkOfDifferentType obj) {
        removeToManyTarget(FKS_OF_DIFFERENT_TYPE_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<FkOfDifferentType> getFksOfDifferentType() {
        return (List<FkOfDifferentType>)readProperty(FKS_OF_DIFFERENT_TYPE_PROPERTY);
    }


    public void addToMeanigfulFKs(MeaningfulFK obj) {
        addToManyTarget(MEANIGFUL_FKS_PROPERTY, obj, true);
    }
    public void removeFromMeanigfulFKs(MeaningfulFK obj) {
        removeToManyTarget(MEANIGFUL_FKS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<MeaningfulFK> getMeanigfulFKs() {
        return (List<MeaningfulFK>)readProperty(MEANIGFUL_FKS_PROPERTY);
    }


    public void addToReflexiveAndToOneArray(ReflexiveAndToOne obj) {
        addToManyTarget(REFLEXIVE_AND_TO_ONE_ARRAY_PROPERTY, obj, true);
    }
    public void removeFromReflexiveAndToOneArray(ReflexiveAndToOne obj) {
        removeToManyTarget(REFLEXIVE_AND_TO_ONE_ARRAY_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<ReflexiveAndToOne> getReflexiveAndToOneArray() {
        return (List<ReflexiveAndToOne>)readProperty(REFLEXIVE_AND_TO_ONE_ARRAY_PROPERTY);
    }


}
